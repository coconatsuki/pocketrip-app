"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/profile",{

/***/ "./pages/api/profile.ts":
/*!******************************!*\
  !*** ./pages/api/profile.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"downloadAvatar\": function() { return /* binding */ downloadAvatar; },\n/* harmony export */   \"getProfile\": function() { return /* binding */ getProfile; },\n/* harmony export */   \"getProfileServerSide\": function() { return /* binding */ getProfileServerSide; }\n/* harmony export */ });\nconst getProfile = async (param)=>{\n    let { supabase , setLoading , user , setUsername , setAvatarPath  } = param;\n    let username;\n    try {\n        setLoading(true);\n        const { data , error , status  } = await supabase.from(\"profiles\").select(\"username, avatar_url\").eq(\"id\", user.id).single();\n        if (error && status !== 406) {\n            throw error;\n        }\n        if (data) {\n            setUsername(data.username);\n            setAvatarPath(data.avatar_url);\n            username = data.username;\n        }\n    } catch (error) {\n        alert(\"Error loading user data!\");\n        console.log(error);\n    } finally{\n        setLoading(false);\n    }\n    return username;\n};\nconst downloadAvatar = async (param)=>{\n    let { supabase , avatar_path , setAvatarUrl  } = param;\n    try {\n        const { data , error  } = await supabase.storage.from(\"avatars\").download(avatar_path);\n        if (error) {\n            throw error;\n        }\n        const url = URL.createObjectURL(data);\n        setAvatarUrl(url);\n    } catch (error) {\n        console.log(\"Error downloading image: \", error.message);\n    }\n};\nconst getProfileServerSide = async (supabase, userId)=>{\n    try {\n        const { data , error  } = await supabase.from(\"profiles\").select(\"username, avatar_url\").eq(\"id\", userId).single();\n        if (error) {\n            throw error;\n        }\n        return {\n            username: data.username,\n            avatar_url: data.avatar_url\n        };\n    } catch (error) {\n        console.log(\"Error getting user data\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hcGkvcHJvZmlsZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSxhQUFhLGVBTXBCO1FBTjJCLEVBQy9CQyxTQUFRLEVBQ1JDLFdBQVUsRUFDVkMsS0FBSSxFQUNKQyxZQUFXLEVBQ1hDLGNBQWEsRUFDZDtJQUNDLElBQUlDO0lBQ0osSUFBSTtRQUNGSixXQUFXLElBQUk7UUFFZixNQUFNLEVBQUVLLEtBQUksRUFBRUMsTUFBSyxFQUFFQyxPQUFNLEVBQUUsR0FBRyxNQUFNUixTQUNuQ1MsSUFBSSxDQUFDLFlBQ0xDLE1BQU0sQ0FBRSx3QkFDUkMsRUFBRSxDQUFDLE1BQU1ULEtBQUtVLEVBQUUsRUFDaEJDLE1BQU07UUFFVCxJQUFJTixTQUFTQyxXQUFXLEtBQUs7WUFDM0IsTUFBTUQsTUFBTTtRQUNkLENBQUM7UUFFRCxJQUFJRCxNQUFNO1lBQ1JILFlBQVlHLEtBQUtELFFBQVE7WUFDekJELGNBQWNFLEtBQUtRLFVBQVU7WUFDN0JULFdBQVdDLEtBQUtELFFBQVE7UUFDMUIsQ0FBQztJQUNILEVBQUUsT0FBT0UsT0FBTztRQUNkUSxNQUFNO1FBQ05DLFFBQVFDLEdBQUcsQ0FBQ1Y7SUFDZCxTQUFVO1FBQ1JOLFdBQVcsS0FBSztJQUNsQjtJQUNBLE9BQU9JO0FBQ1QsRUFBRTtBQUVLLE1BQU1hLGlCQUFpQixlQUl4QjtRQUorQixFQUNuQ2xCLFNBQVEsRUFDUm1CLFlBQVcsRUFDWEMsYUFBWSxFQUNiO0lBQ0MsSUFBSTtRQUNGLE1BQU0sRUFBRWQsS0FBSSxFQUFFQyxNQUFLLEVBQUUsR0FBRyxNQUFNUCxTQUFTcUIsT0FBTyxDQUMzQ1osSUFBSSxDQUFDLFdBQ0xhLFFBQVEsQ0FBQ0g7UUFDWixJQUFJWixPQUFPO1lBQ1QsTUFBTUEsTUFBTTtRQUNkLENBQUM7UUFDRCxNQUFNZ0IsTUFBTUMsSUFBSUMsZUFBZSxDQUFDbkI7UUFDaENjLGFBQWFHO0lBQ2YsRUFBRSxPQUFPaEIsT0FBTztRQUNkUyxRQUFRQyxHQUFHLENBQUMsNkJBQTZCVixNQUFNbUIsT0FBTztJQUN4RDtBQUNGLEVBQUU7QUFFSyxNQUFNQyx1QkFBdUIsT0FBTzNCLFVBQVU0QixTQUFXO0lBQzlELElBQUk7UUFDRixNQUFNLEVBQUV0QixLQUFJLEVBQUVDLE1BQUssRUFBRSxHQUFHLE1BQU1QLFNBQzNCUyxJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFFLHdCQUNSQyxFQUFFLENBQUMsTUFBTWlCLFFBQ1RmLE1BQU07UUFDVCxJQUFJTixPQUFPO1lBQ1QsTUFBTUEsTUFBTTtRQUNkLENBQUM7UUFDRCxPQUFPO1lBQUVGLFVBQVVDLEtBQUtELFFBQVE7WUFBRVMsWUFBWVIsS0FBS1EsVUFBVTtRQUFDO0lBQ2hFLEVBQUUsT0FBT1AsT0FBTztRQUNkUyxRQUFRQyxHQUFHLENBQUM7SUFDZDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvYXBpL3Byb2ZpbGUudHM/OWQ5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0UHJvZmlsZSA9IGFzeW5jICh7XHJcbiAgc3VwYWJhc2UsXHJcbiAgc2V0TG9hZGluZyxcclxuICB1c2VyLFxyXG4gIHNldFVzZXJuYW1lLFxyXG4gIHNldEF2YXRhclBhdGgsXHJcbn0pID0+IHtcclxuICBsZXQgdXNlcm5hbWU7XHJcbiAgdHJ5IHtcclxuICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcblxyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciwgc3RhdHVzIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbShcInByb2ZpbGVzXCIpXHJcbiAgICAgIC5zZWxlY3QoYHVzZXJuYW1lLCBhdmF0YXJfdXJsYClcclxuICAgICAgLmVxKFwiaWRcIiwgdXNlci5pZClcclxuICAgICAgLnNpbmdsZSgpO1xyXG5cclxuICAgIGlmIChlcnJvciAmJiBzdGF0dXMgIT09IDQwNikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGF0YSkge1xyXG4gICAgICBzZXRVc2VybmFtZShkYXRhLnVzZXJuYW1lKTtcclxuICAgICAgc2V0QXZhdGFyUGF0aChkYXRhLmF2YXRhcl91cmwpO1xyXG4gICAgICB1c2VybmFtZSA9IGRhdGEudXNlcm5hbWU7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGFsZXJ0KFwiRXJyb3IgbG9hZGluZyB1c2VyIGRhdGEhXCIpO1xyXG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gIH0gZmluYWxseSB7XHJcbiAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICB9XHJcbiAgcmV0dXJuIHVzZXJuYW1lO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGRvd25sb2FkQXZhdGFyID0gYXN5bmMgKHtcclxuICBzdXBhYmFzZSxcclxuICBhdmF0YXJfcGF0aCxcclxuICBzZXRBdmF0YXJVcmwsXHJcbn0pID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2Uuc3RvcmFnZVxyXG4gICAgICAuZnJvbShcImF2YXRhcnNcIilcclxuICAgICAgLmRvd25sb2FkKGF2YXRhcl9wYXRoKTtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZGF0YSk7XHJcbiAgICBzZXRBdmF0YXJVcmwodXJsKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5sb2coXCJFcnJvciBkb3dubG9hZGluZyBpbWFnZTogXCIsIGVycm9yLm1lc3NhZ2UpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRQcm9maWxlU2VydmVyU2lkZSA9IGFzeW5jIChzdXBhYmFzZSwgdXNlcklkKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXHJcbiAgICAgIC5mcm9tKFwicHJvZmlsZXNcIilcclxuICAgICAgLnNlbGVjdChgdXNlcm5hbWUsIGF2YXRhcl91cmxgKVxyXG4gICAgICAuZXEoXCJpZFwiLCB1c2VySWQpXHJcbiAgICAgIC5zaW5nbGUoKTtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIHJldHVybiB7IHVzZXJuYW1lOiBkYXRhLnVzZXJuYW1lLCBhdmF0YXJfdXJsOiBkYXRhLmF2YXRhcl91cmwgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5sb2coXCJFcnJvciBnZXR0aW5nIHVzZXIgZGF0YVwiKTtcclxuICB9XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJnZXRQcm9maWxlIiwic3VwYWJhc2UiLCJzZXRMb2FkaW5nIiwidXNlciIsInNldFVzZXJuYW1lIiwic2V0QXZhdGFyUGF0aCIsInVzZXJuYW1lIiwiZGF0YSIsImVycm9yIiwic3RhdHVzIiwiZnJvbSIsInNlbGVjdCIsImVxIiwiaWQiLCJzaW5nbGUiLCJhdmF0YXJfdXJsIiwiYWxlcnQiLCJjb25zb2xlIiwibG9nIiwiZG93bmxvYWRBdmF0YXIiLCJhdmF0YXJfcGF0aCIsInNldEF2YXRhclVybCIsInN0b3JhZ2UiLCJkb3dubG9hZCIsInVybCIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsIm1lc3NhZ2UiLCJnZXRQcm9maWxlU2VydmVyU2lkZSIsInVzZXJJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/api/profile.ts\n"));

/***/ })

});